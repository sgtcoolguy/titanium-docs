(window.webpackJsonp=window.webpackJsonp||[]).push([[275],{526:function(e,i,a){"use strict";a.r(i);var t=a(4),n=Object(t.a)({},function(){var e=this,i=e.$createElement,a=e._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"titanium-ui-ios-collisionbehavior"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#titanium-ui-ios-collisionbehavior","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.UI.iOS.CollisionBehavior")]),e._v(" "),a("TypeHeader"),e._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("p",[e._v("A collision behavior specifies the behavior when items collide with each other and boundaries.\nTo define a collision behavior:")]),e._v(" "),a("ol",[a("li",[e._v("Use the "),a("type-link",{attrs:{type:"Titanium.UI.iOS.createCollisionBehavior"}},[e._v("Titanium.UI.iOS.createCollisionBehavior")]),e._v(" method to create and define the behavior.")],1),e._v(" "),a("li",[e._v("Use the "),a("type-link",{attrs:{type:"Titanium.UI.iOS.CollisionBehavior.addItem"}},[e._v("addItem")]),e._v(" method to add items to the behavior.")],1),e._v(" "),a("li",[e._v("Use the "),a("type-link",{attrs:{type:"Titanium.UI.iOS.CollisionBehavior.addBoundary"}},[e._v("addBoundary")]),e._v(" method to add custom\nboundaries for the item to collide with. By default, the behavior uses the Animator\nobject's reference view as the boundary.")],1),e._v(" "),a("li",[e._v("Add the behavior to an "),a("type-link",{attrs:{type:"Titanium.UI.iOS.Animator"}},[e._v("Animator object")]),e._v(".")],1)]),e._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("h3",{attrs:{id:"simple-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-example","aria-hidden":"true"}},[e._v("#")]),e._v(" Simple Example")]),e._v(" "),a("p",[e._v("The following example creates many blocks scattered across the top of the window, which\nstart falling after the window opens.  The item and boundary collisions are reported to the\nconsole.")]),e._v(" "),a("img",{staticStyle:{border:"1px solid black"},attrs:{src:"images/animator/collision.gif",height:"455"}}),e._v(" "),a("pre",[a("code",[e._v("var win = Ti.UI.createWindow({backgroundColor: 'white', fullscreen: true});\n\n// Create an Animator object using the window as the coordinate system\nvar animator = Ti.UI.iOS.createAnimator({referenceView: win});\n\n// Create a default collision behavior, using the window edges as boundaries\nvar collision = Ti.UI.iOS.createCollisionBehavior();\n\n// Listen for collisions\nfunction report(e) {\n    Ti.API.info(JSON.stringify(e.type));\n};\ncollision.addEventListener('itemcollision', report);\ncollision.addEventListener('boundarycollision', report);\n\n// Simulate Earth's gravity\nvar gravity = Ti.UI.iOS.createGravityBehavior({\n    gravityDirection: {x: 0.0, y: 1.0}\n});\n\nvar WIDTH = Ti.Platform.displayCaps.platformWidth;\nvar HEIGHT = Ti.Platform.displayCaps.platformHeight;\n\n// Create a bunch of random blocks; add to the window and behaviors\nvar blocks = [];\nfor (var i = 0; i < 25; i++) {\n    var r = Math.round(Math.random() * 255);\n    var g = Math.round(Math.random() * 255);\n    var b = Math.round(Math.random() * 255);\n    var rgb = 'rgb(' + r +\",\" + g + \",\" + b + \")\";\n\n    blocks[i] = Ti.UI.createView({\n        width: 25,\n        height: 25,\n        top: Math.round(Math.random() * (HEIGHT / 4) + 25),\n        left: Math.round(Math.random() * (WIDTH - 25) + 25),\n        backgroundColor: rgb\n    });\n    win.add(blocks[i]);\n    collision.addItem(blocks[i]);\n    gravity.addItem(blocks[i]);\n}\n\nanimator.addBehavior(collision);\nanimator.addBehavior(gravity);\n\n// Start the animation when the window opens\nwin.addEventListener('open', function(e){\n    animator.startAnimator();\n});\n\nwin.open();\n")])]),e._v(" "),a("ApiDocs")],1)},[],!1,null,null,null);i.default=n.exports}}]);