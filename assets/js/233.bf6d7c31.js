(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{643:function(e,r,t){"use strict";t.r(r);var o=t(4),n=Object(o.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"titanium-network-bonjourbrowser"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#titanium-network-bonjourbrowser","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.Network.BonjourBrowser")]),e._v(" "),t("TypeHeader"),e._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),t("p",[e._v("Use the "),t("type-link",{attrs:{type:"Titanium.Network.createBonjourBrowser"}},[e._v("Titanium.Network.createBonjourBrowser")]),e._v(" method to create a "),t("code",[e._v("BonjourBrowser")]),e._v(" instance.")],1),e._v(" "),t("p",[e._v("If your application publishes Bonjour services itself, that service will be discovered\nby the browser if necessary; be prepared to perform a check if you do not want to list\nlocal services as available.  Bonjour service browsing is an asynchronous operation,\nmeaning that you should be extremely careful when caching values from the "),t("code",[e._v("services")]),e._v("\nproperty returned by the "),t("code",[e._v("updatedservices")]),e._v(" event.  In particular, if you maintain a\nlocal copy of available services and a user tries to connect to one, you should be prepared\nto handle failures gracefully; the next "),t("code",[e._v("updatedservices")]),e._v(" event should provide the new\nservices list, but you should not rely on it being delivered before user input.  When\na window which uses Bonjour browsing is closed, if you do not want to continue searching,\nyou must call the stop() method.")]),e._v(" "),t("ApiDocs")],1)},[],!1,null,null,null);r.default=n.exports}}]);